import  webbrowser 
import  time
import  subprocess
import pyshorteners as sh
option='''
Press  1  to  start  your  vlc  media player :
Press  2  to  play your fav song in youtube :  
Press  3  to  search something  on google   :  
Press  4  to send whatsapp message to your fav number  :  
Press  5  to  check current  time and date  :
press 6 to short any link : 
'''
print(option)

#  taking  input from  user  
#  1 st
choice=input()
#  input function will take input in str  format 
#   conditional  state
if   choice  ==   '5' :
    #   to connect  our BIOS  time 
    current_time=time.ctime()
    print(current_time)

elif  choice  ==  '1'  :
    #   to connect  os level application we use subprocess 
    subprocess.getoutput('vlc')

elif  choice  ==  '3' :
    data=input("type your search :--->  ")
    webbrowser.open_new_tab('https://www.google.com/search?q='+data)

elif choice =='2':
	data=input("type your search :-->  ")
	webbrowser.open_new_tab('https://www.youtube.com/search?q='+data)

elif choice == 6:
    link = input("please enter Link")#'https://www.youtube.com/c/realhorrorvideo'
    s = sh.Shortener()
    x = (s.tinyurl.short(link))
    print(x)

else  :
    print("not recoginze")
    
    
  
  
# Using Voice 

import webbrowser
import speech_recognition as sr
print("welcome")
r = sr.Recognizer()
with sr.Microphone() as Source:
    print("start saying")
    audio = r.listen(Source)
    print("We got it , please wait")

ch = r.recognize_google(audio)
#if("date" in ch) and (("run" in ch) or ("execute" in ch)):
webbrowser.open_new_tab('https://www.google.com/search?q='+ch)


# update......


import webbrowser
import speech_recognition as sr
import pyttsx3
import pywhatkit
import datetime
import wikipedia
import pyjokes
print("welcome")

listener = sr.Recognizer()
engine = pyttsx3.init()
voices = engine.getProperty("voices")
engine.setProperty('voice',voices[1].id) # Set femal voice

def engine_talk(text):
    engine.say(text)
    engine.runAndWait()

#engine.say("I am Your bot")
#engine.say("How Can I help You")

def user_commands():
    with sr.Microphone() as Source:
        print("start saying")
        voice = listener.listen(Source)
        print("We got it , please wait")
        command = listener.recognize_google(voice)
        #command = command.lower()
        print(command)
        return command

def run_alexa():
    usercommand = user_commands()
    if(('play' in usercommand) or ('start' in usercommand)):
        song = usercommand.replace('play',' ')
        #print("new command is" +command)
        #print("the bot is telling us: Playing" +command)
        engine_talk("playing" +song)
        pywhatkit.playonyt(song)

    if 'time' in usercommand:
        time = datetime.datetime.now().strftime('%I:%M %p')
        engine_talk('The current time is' +time)

    if 'who is' in usercommand:
        name = usercommand.replace('who is','')
        info = wikipedia.summary(name,1)
        print(info)
        engine_talk(info)

    if 'joke' in usercommand:
        engine_talk(pyjokes.get_joke())

    if 'show me' in usercommand:
        show = usercommand.replace('show me',' ')
        webbrowser.open_new_tab('https://www.google.com/search?q='+show)

    else:
        engine_talk('I could not hear you Properly')

run_alexa()

#ch = r.recognize_google(audio)
#if("Youtube" in ch):
#    webbrowser.open_new_tab('https://www.youtube.com/search?q='+data)
#else:
#    webbrowser.open_new_tab('https://www.google.com/search?q='+ch)
